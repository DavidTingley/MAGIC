name: Unit Tests

on:
  push:
    branches-ignore:
      - 'test_deploy'
  pull_request:
    branches:
      - '*'

jobs:

  run_tester:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: '3.9', os: ubuntu-latest, python: '3.9' }
        - {name: '3.8', os: ubuntu-latest, python: '3.8' }
        - {name: '3.7', os: ubuntu-latest, python: '3.7' }
        - {name: '3.6', os: ubuntu-latest, python: '3.6' }

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

    - name: Check Ubuntu version
      run: |
        echo "UBUNTU_VERSION=`grep DISTRIB_RELEASE /etc/lsb-release | sed 's/.*=//g'`" >> $GITHUB_ENV

    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{runner.os}}-pip-${{ env.pythonLocation }}-${{ hashFiles('python/setup.py') }}
        restore-keys: ${{runner.os}}-pip-${{ env.pythonLocation }}-

    - name: Install package & dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U wheel setuptools
        pip install -U ./python[test]
        python -c "import magic"

    - name: Run Python tests
      run: |
        cd python
        nose2 -vvv
        cd ..

    - name: Cache R packages
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ${{env.R_LIBS_USER}}
        key: precommit-${{env.UBUNTU_VERSION}}-renv-${{ hashFiles('.pre-commit.r_requirements.txt') }}-
        restore-keys: |
          precommit-${{env.UBUNTU_VERSION}}-renv-

    - name: Install R packages
      run: |
        if (!require("devtools")) install.packages("devtools", repos="http://cloud.r-project.org")
        devtools::install("./Rmagic")

    - name: Run R tests
      run: |
        cd Rmagic
        R CMD build .
        R CMD check --as-cran *.tar.gz
        cd ..

    - name: Build docs
      run: |
        cd python
        pip install .[doc]
        cd doc
        make html
        cd ../..

    - name: Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_SERVICE_NAME: github
      run: |
        coveralls

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: check
